"""
Address Profiler ‚Äî –∞–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ Bitcoin-–∞–¥—Ä–µ—Å–∞.
"""

import requests
import argparse
from datetime import datetime

def fetch_address_profile(address):
    url = f"https://api.blockchair.com/bitcoin/dashboards/address/{address}"
    r = requests.get(url)
    if r.status_code != 200:
        raise Exception("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ Blockchair API.")
    return r.json()["data"][address]

def profile_address(address):
    data = fetch_address_profile(address)
    meta = data["address"]
    txs = data["transactions"]

    print(f"üìç Address Profiler –¥–ª—è: {address}")
    print(f"üí∞ –ë–∞–ª–∞–Ω—Å: {meta['balance']} —Å–∞—Ç–æ—à–∏")
    print(f"üîÑ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {meta['transaction_count']}")
    print(f"üì• –ü–æ–ª—É—á–µ–Ω–æ –≤—Å–µ–≥–æ: {meta['received']} —Å–∞—Ç–æ—à–∏")
    print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–≥–æ: {meta['spent']} —Å–∞—Ç–æ—à–∏")

    if txs:
        print(f"üï∞Ô∏è –ü–µ—Ä–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: –±–ª–æ–∫ {meta['first_seen_receiving_block']} ({txs[-1]})")
        print(f"‚è±Ô∏è –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: –±–ª–æ–∫ {meta['last_seen_receiving_block']} ({txs[0]})")
    else:
        print("‚ùó –ù–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–æ–Ω–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Address Profiler ‚Äî –∞–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∞–¥—Ä–µ—Å–∞.")
    parser.add_argument("address", help="Bitcoin-–∞–¥—Ä–µ—Å")
    args = parser.parse_args()
    profile_address(args.address)
